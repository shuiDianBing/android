<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>
    <style name="VariationTradition" parent="Theme.AppCompat.Light.DarkActionBar">传统方式
        <item name="android:windowFullscreen">false</item>
        <item name="colorPrimaryDark">@color/skyBlue</item>状态栏颜色
        <item name="android:windowTranslucentStatus">false</item>
        <item name="android:statusBarColor">@color/skyBlue</item>
        <item name="colorPrimary">@color/skyBlue</item>标题栏颜色
        <item name="windowActionBar">true</item>
        <!--<item name="android:windowTitleStyle">@style/标题栏风格</item>-->
        <item name="android:fitsSystemWindows">false</item>如果想让一个View的图像显示在状态栏下,那么就在View的XML布局文件中添加属性android:fitsSystemWindows="true"
        <item name="android:windowBackground">@color/defaultGray</item>
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowSoftInputMode">stateHidden|adjustUnspecified|stateUnchanged|adjustPan</item>
        <item name="android:configChanges">orientation|keyboardHidden</item>
        <item name="android:windowTranslucentNavigation">false</item>
    </style>
    android状态栏一体化(沉浸式状态栏) http://blog.csdn.net/jdsjlzx/article/details/41643587
    Android 5.0 如何实现将布局的内容延伸到状态栏? https://www.zhihu.com/question/31468556
    去掉Activity上面的状态栏getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
    <style name="Customization" parent="Theme.AppCompat.DayNight.NoActionBar">Android 沉浸式状态栏完美实现 http://blog.csdn.net/tyzlmjj/article/details/50890847
        <item name="android:windowFullscreen">false</item>
        <item name="android:windowTranslucentStatus">true</item>
        <item name="android:statusBarColor">@android:color/transparent</item>
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>//去除title另一种方式requestWindowFeature(Window.FEATURE_NO_TITLE);
        <item name="android:fitsSystemWindows">false</item>如果想让一个View的图像显示在状态栏下,那么就在View的XML布局文件中添加属性android:fitsSystemWindows="true"
        <item name="android:windowBackground">@color/defaultGray</item>
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowSoftInputMode">stateHidden|adjustUnspecified|stateUnchanged|adjustPan</item>
        <item name="android:configChanges">orientation|keyboardHidden</item>
        <item name="android:windowTranslucentNavigation">false</item>
        <item name="android:screenOrientation">portrait</item>
    </style>
    <style name="AppTheme.NoActionBar"  parent="Theme.AppCompat.Light.NoActionBar">//Theme.AppCompat.Light.NoActionBar
        <item name="colorPrimaryDark">@color/skyBlue</item>
        <item name="colorPrimary">@color/skyBlue</item>
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item name="android:colorControlNormal">@android:color/white</item>返回键颜色
        <item name="android:textColorPrimary">@android:color/white</item>
        <item name="android:windowBackground">@color/defaultGray</item>
        <item name="android:navigationBarColor">@android:color/transparent</item>
    </style>
    Android的Toolbar(含溢出菜单设置[弹出菜单的使用])的使用PopMenu的样式 http://blog.csdn.net/yingtian648/article/details/52432438
    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar">@style/Widget.AppCompat.PopupMenu
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item name="overlapAnchor">false</item>是否覆盖锚点，默认为true，即盖住Toolbar
        <item name="android:dropDownWidth">wrap_content</item>
        <item name="android:paddingRight">5dp</item>
        <item name="android:popupBackground">@color/colorAccent</item>弹出层背景颜色
        <item name="android:dropDownVerticalOffset">5dp</item>弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar
        <item name="android:dropDownHorizontalOffset">0dp</item> 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙
        <item name="android:textColor">@android:color/white</item>设置弹出菜单文字颜色
    </style>
    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light">
        <item name="android:colorBackground">@android:color/darker_gray</item>
    </style>
    <!-- Base application theme. -->
    <style name="BaseAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:textColorPrimary">@android:color/white</item>
        <!-- Toolbar Theme / Apply white arrow -->
        <item name="colorControlNormal">@android:color/white</item>
        <!--Navigation icon颜色设置-->
        <item name="drawerArrowStyle">@style/AppTheme.MyDrawerArrowStyle</item>
    </style>

    <!--加入一個新的 navigation drarwer 的風格-->
    <style name="AppTheme.MyDrawerArrowStyle" parent="Widget.AppCompat.DrawerArrowToggle">
        <!--將 spinBars 屬性設定為 false-->
        <item name="spinBars">false</item>
        <!--設定 drawer arrow 的顏色-->
        <item name="color">@android:color/white</item>
    </style>
</resources>
